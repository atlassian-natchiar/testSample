name: manual job trigger workflow 

on:
  workflow_dispatch:
   inputs:
    releasePercentage:
      description: Rollout Percentage
      required: true
    releaseMode:
        type: string
        description: ga beta 
        required: true

jobs:
  build_with_test:
    name: build
    runs-on: windows-latest
    outputs:
      output_filename: ${{ steps.output_filename_generation.outputs.artifactname}}

    steps:

      - name: Hello world
        run: |
          echo "execitededdeded"
          mkdir distributables
          cd distributables
          New-Item test.txt
          Set-Content test.txt 'Welcome to TutorialsPoint'
          get-Content test.txt
        
      - name: Output File name
        id: output_filename_generation
        run: |
          $tagvar="SourceTreeReleaseArchive_${{ github.sha }}.zip"
          echo "::set-output name=artifactname::$tagvar"
          cd distributables
          cat test.txt
          
      - name: Create packgae
        id: create_package
        run: |
          Compress-Archive -Path ./distributables -DestinationPath ./distributables/Archives
          Compress-Archive -Path ./distributables -DestinationPath ./distributables/SourceTreeReleaseArchive_${{ github.sha }}
          cd distributables
          $artifactname_temp=${{ Get-ChildItem -Filter *.zip -Recurse | Where-Object { $_.FullName -match 'SourceTreeReleaseArchive_*' }  }}
          echo $artifactname_temp
        
  deploy_to_beta: 
    name: Deploy for Beta
    needs: build_with_test
    runs-on: windows-latest
    environment:
      name: staging 

    steps:
    # Deploy to App Service Linux
      - name: Deploy to s3
        id: deploy_beta
#        uses: actions/checkout@v2
#        with:
#          slot-name: staging
        run: |
          $mode_of_release="${{ github.event.inputs.releaseMode}}"
          if (  $mode_of_release.equals("beta"))
          {
          echo "Beta Release"
          echo ${{needs.build_with_test.outputs.output_filename}}
          }
          else
          {
          echo "Skipping Beta Release"
          }
          
  ga_release: 
    name: Deploy for GA
    needs: [build_with_test,deploy_to_beta]
    runs-on: windows-latest
    environment:
      name: staging 
    steps:
      - name: Deploy GA to s3
        id: deploy_ga
        
        run: |
          $mode_of_release="${{ github.event.inputs.releaseMode}}"
          if (  $mode_of_release.equals("ga"))
          {
           echo "Ga build"
           echo ${{needs.build_with_test.outputs.output_filename}}
           echo "Release percentage" ${{ github.event.inputs.releasePercentage}}
          }
          else
          {
          echo "Skipping Ga Release"
          }
         
    
